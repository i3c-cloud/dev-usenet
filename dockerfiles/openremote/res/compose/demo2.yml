# OpenRemote v3
#
# By default running this profile installs the stack on https://localhost using a
# self-signed SSL certificate, with username 'admin' and password 'secret'.
#
# Install Docker Community edition (https://docker.com/) on Windows, macOS, or Linux.
#
# Start a transient demo stack with:
#
#   docker-compose -p openremote -f profile/demo.yml up
#
# For full documentation, see deploy.yml
#
# Steps to create a permanent installation:
#
# 1. DO NOT FORGET TO CHANGE SETUP_ADMIN_PASSWORD!
#
# 2. Consider setting a custom DOMAINNAME, LE_EMAIL, and IDENTITY_NETWORK_HOST, see deploy.yml
#
# 3. Understand how bind mounts and volume mappings work, see below and read:
#     https://docs.docker.com/engine/admin/volumes/bind-mounts/
#     https://docs.docker.com/engine/admin/volumes/volumes/#choose-the--v-or-mount-flag
#     Survival guide: docker volume ls|rm|prune
#
# 4. Execute once:
#
#   SETUP_WIPE_CLEAN_INSTALL=true \
#   SETUP_ADMIN_PASSWORD=secret \
#   docker-compose -p openremote -f profile/demo.yml up
#
# This creates the initial database and optionally imports some examples. Inspect the
# running installation and ensure it's working. You are now ready to restart the stack
# without the clean wipe option. Passwords can be changed in the application.
#
# Database schemas will be upgraded to new versions of the services automatically, you do
# not have to wipe all data to install a new version of OpenRemote.
#
# Your extension JAR files should be in the manager's ../deployment/extensions/ directory.
#
version: '2.2'

# If you enable volume mappings in services, you need this. Otherwise, remove the volumes
volumes:
  #proxy-data:
  #manager-data:
  postgresql-data:

services:

  # This configuration does not store SSL certificate data and allow changes to the
  # proxy configuration, it is only configured for deployment on localhost. You can
  # map a Docker volume or host directory to access/store proxy configuration files
  # and SSL certificates.
  proxy:
    extends:
      file: ${UDATA}/openremote/profile/deploy.yml
      service: proxy
    build:
      context: '../proxy'

    # Image will be pulled when using the `docker-compose pull` command or `docker-compose up --no-build`
    image: i3c/openremote/proxy:latest      
    environment:

      # It is important that all services have the same timezone and are time synchronized.
      # Bearer tokens are only valid for minutes, and authentication fails if Keycloak drifts.
      TZ: Europe/Zurich
      DOMAINNAME: i3c.h       
    # volumes:
      # Store data either in host-mapped directory or a named Docker volume
      # - ${DEPLOYMENT_DIRECTORY:-../deployment}/proxy:/deployment
      # - proxy-data:/deployment
      #
      # Override the haproxy.cfg with custom file
      # -${MY_PROXY_CONFIG_FILE}:/etc/haproxy/haproxy.cfg


